"use strict";(self.webpackChunkpersonal_blog=self.webpackChunkpersonal_blog||[]).push([["2514"],{20738:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,default:()=>h,contentTitle:()=>i,assets:()=>o,toc:()=>c,metadata:()=>l});var l=JSON.parse('{"id":"Zettelkasten/dufs","title":"dufs","description":"API","source":"@site/knowledges/Zettelkasten/dufs.md","sourceDirName":"Zettelkasten","slug":"/Zettelkasten/dufs","permalink":"/knowledges/Zettelkasten/dufs","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"readings","previous":{"title":"CNI plugin \u5B89\u88C5","permalink":"/knowledges/Zettelkasten/CNI plugin \u5B89\u88C5"},"next":{"title":"etcd deploy and test","permalink":"/knowledges/Zettelkasten/etcd deploy and test"}}'),s=t(85893),a=t(50065);let r={},i=void 0,o={},c=[{value:"API",id:"api",level:2}];function d(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,s.jsx)(n.p,{children:"Upload a file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl -T path-to-file http://127.0.0.1:5000/new-path/path-to-file\n"})}),"\n",(0,s.jsx)(n.p,{children:"Upload a folder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\n# \u68C0\u67E5\u53C2\u6570\nif [ "$#" -ne 2 ]; then\n    echo "Usage: $0 <local_directory> <dufs_url>"\n    exit 1\nfi\n\nLOCAL_DIR="$1"\nDUFS_URL="$2"\n\n# \u786E\u4FDD\u76EE\u5F55\u5B58\u5728\nif [ ! -d "$LOCAL_DIR" ]; then\n    echo "Error: Directory \'$LOCAL_DIR\' does not exist."\n    exit 1\nfi\n\n# \u904D\u5386\u76EE\u5F55\u5E76\u4E0A\u4F20\u6587\u4EF6\nfind "$LOCAL_DIR" -type f | while read -r file; do\n    relative_path="${file#$LOCAL_DIR/}"  # \u83B7\u53D6\u76F8\u5BF9\u8DEF\u5F84\n    target_url="${DUFS_URL%/}/$relative_path"  # \u62FC\u63A5\u76EE\u6807 URL\n\n    echo "Uploading \'$file\' to \'$target_url\'..."\n    curl -T "$file" "$target_url"\n\n    if [ $? -ne 0 ]; then\n        echo "Failed to upload \'$file\'."\n    fi\ndone\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"Download a file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl http://127.0.0.1:5000/path-to-file           # download the file\ncurl http://127.0.0.1:5000/path-to-file?hash      # retrieve the sha256 hash of the file\n"})}),"\n",(0,s.jsx)(n.p,{children:"Download a folder as zip file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl -o path-to-folder.zip http://127.0.0.1:5000/path-to-folder?zip\n"})}),"\n",(0,s.jsx)(n.p,{children:"Delete a file/folder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl -X DELETE http://127.0.0.1:5000/path-to-file-or-folder\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create a directory"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl -X MKCOL http://127.0.0.1:5000/path-to-folder\n"})}),"\n",(0,s.jsx)(n.p,{children:"Move the file/folder to the new path"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl -X MOVE http://127.0.0.1:5000/path -H "Destination: http://127.0.0.1:5000/new-path"\n'})}),"\n",(0,s.jsx)(n.p,{children:"List/search directory contents"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl http://127.0.0.1:5000?q=Dockerfile           # search for files, similar to `find -name Dockerfile`\ncurl http://127.0.0.1:5000?simple                 # output names only, similar to `ls -1`\ncurl http://127.0.0.1:5000?json                   # output paths in json format\n"})}),"\n",(0,s.jsx)(n.p,{children:"With authorization (Both basic or digest auth works)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl http://127.0.0.1:5000/file --user user:pass                 # basic auth\ncurl http://127.0.0.1:5000/file --user user:pass --digest        # digest auth\n"})}),"\n",(0,s.jsx)(n.p,{children:"Resumable downloads"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl -C- -o file http://127.0.0.1:5000/file\n"})}),"\n",(0,s.jsx)(n.p,{children:"Resumable uploads"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"upload_offset=$(curl -I -s http://127.0.0.1:5000/file | tr -d '\\r' | sed -n 's/content-length: //p')\ndd skip=$upload_offset if=file status=none ibs=1 | \\\n  curl -X PATCH -H \"X-Update-Range: append\" --data-binary @- http://127.0.0.1:5000/file\n"})}),"\n",(0,s.jsx)(n.p,{children:"Health checks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"curl http://127.0.0.1:5000/__dufs__/health\n"})})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:()=>i,a:()=>r});var l=t(67294);let s={},a=l.createContext(s);function r(e){let n=l.useContext(a);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);