"use strict";(self.webpackChunkpersonal_blog=self.webpackChunkpersonal_blog||[]).push([[3003],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>u});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=c(o),u=n,m=h["".concat(l,".").concat(u)]||h[u]||p[u]||i;return o?r.createElement(m,a(a({ref:t},d),{},{components:o})):r.createElement(m,a({ref:t},d))}));function u(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,a=new Array(i);a[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var c=2;c<i;c++)a[c]=o[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}h.displayName="MDXCreateElement"},6808:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=o(7462),n=(o(7294),o(3905));const i={layout:"post",title:"[Literature Reading] Modern Code Review: A Case Study at Google",date:new Date("2021-12-14T21:35:04.000Z"),tags:["Software Engineering"],authors:["xigou"]},a=void 0,s={permalink:"/en/blog/Modern-Code-Review-A-Case-Study-at-Google",source:"@site/blog/Modern-Code-Review-A-Case-Study-at-Google.md",title:"[Literature Reading] Modern Code Review: A Case Study at Google",description:"Recently, after called some code review meetings in my daily work, I got interested about code review practice, so I read this excellent article on the weekend.",date:"2021-12-14T21:35:04.000Z",formattedDate:"December 14, 2021",tags:[{label:"Software Engineering",permalink:"/en/blog/tags/software-engineering"}],readingTime:3.865,hasTruncateMarker:!0,authors:[{name:"XiGou",title:"Software Developer",url:"https://github.com/XiGou",imageURL:"https://avatars.githubusercontent.com/u/20839871?s=400&u=362e4a7ba8a851d17b434dc784fbef454d94170c&v=4",key:"xigou"}],frontMatter:{layout:"post",title:"[Literature Reading] Modern Code Review: A Case Study at Google",date:"2021-12-14T21:35:04.000Z",tags:["Software Engineering"],authors:["xigou"]},prevItem:{title:"\u4e3a\u4f60\u5199\u8bd7",permalink:"/en/blog/poetry"},nextItem:{title:"Wireshark experements of Computer Networks: Top-Down Approach",permalink:"/en/blog/Computer-Networks-Top-Down-Approach-s-wireshark-experements copy"}},l={authorsImageUrls:[void 0]},c=[{value:"Hisroty of code review practice",id:"hisroty-of-code-review-practice",level:2},{value:"This research answered three Research Questions about code review:",id:"this-research-answered-three-research-questions-about-code-review",level:2},{value:"RQ1: What are the motivations for code review at Google?",id:"rq1-what-are-the-motivations-for-code-review-at-google",level:3},{value:"RQ2: What is the practice of code review at Google?",id:"rq2-what-is-the-practice-of-code-review-at-google",level:3},{value:"Something interesting",id:"something-interesting",level:2},{value:"Write at the end",id:"write-at-the-end",level:2}],d={toc:c};function p(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Recently, after called some code review meetings in my daily work, I got interested about code review practice, so I read this excellent article on the weekend. "),(0,n.kt)("h2",{id:"hisroty-of-code-review-practice"},"Hisroty of code review practice"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Code Inspections")),(0,n.kt)("p",null,"It's a very  structured process style code review, when developers finished code, they shoud working on planning, overview, preparation, inspection meeting, reworking, and follow-up for code review, reviewers and code authors will sitting in the same room, and they can talk with the author face to face to understand the code and find the defects."),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Asynchronous review via email")),(0,n.kt)("p",null,'Until the late 2000s, most large OSS projects adopted a form of remote, asynchronous reviews, relying on patches sent to communication channels such as mailing lists and issue tracking systems. So this method broke the limitations of "sitting toghter" and authors don\'t need to do a presentation to explain the code, instead they should explain the code in the length of one email.'),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Tool-based review")),(0,n.kt)("p",null,"The main-streamd code review practice nowdays is tool-based, the representative of review systems are Gerrit, CodeFlow, ReviewBoard and Phabricator."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Typical workflow of tool-based review"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"1. author submit code patch to review system,\n2. reviewers review code and post comment on specific lines of code,\n3. authors reply comments or submit new patch to review system,\n4. repeat step 2-3 until all reviewers or specific role of your team think the patch is ready for testing or merging.\n")),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Pull-based development model")),(0,n.kt)("p",null,"Mainly used in Github or similar code repo website, very similar to Tool-based review."),(0,n.kt)("h2",{id:"this-research-answered-three-research-questions-about-code-review"},"This research answered three Research Questions about code review:"),(0,n.kt)("h3",{id:"rq1-what-are-the-motivations-for-code-review-at-google"},"RQ1: What are the motivations for code review at Google?"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Finding 1. Expectations for code review at Google do not center around problem solving. Reviewing was introduced at Google to ensure code readability and maintainability. Today\u2019s developers also perceive this educational aspect, in addition to maintaining norms, tracking history, gatekeeping, and accident prevention. Defect finding is welcomed but not the only focus.")),(0,n.kt)("p",null,"This is in line with my daily experience, when fixing bug it very useful to search for a similar bugfix patch in review system, and the review system contains some auto process to do static check and testing."),(0,n.kt)("p",null,"Besides, The most important aim in business view is to grab out the knowledge out of the brain of the developer and make others easy to learn it, this makes every piece of code at least read by 2-3 employee inside organization, when some empolyee leave the organization, negative impact will be small."),(0,n.kt)("h3",{id:"rq2-what-is-the-practice-of-code-review-at-google"},"RQ2: What is the practice of code review at Google?"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Finding 3. The Google code review process is aligned with the convergent practice of being lightweight and flexible. In contrast to other studied systems, however, ownership and readability are explicit and play a key role. The review tool includes reviewer recommendation and code analysis result")),(0,n.kt)("p",null,"The most impressive part for me is: In Google, every code directory has owner(a set of people), when you change the code of that directory, owner should review and approve the code. "),(0,n.kt)("h2",{id:"something-interesting"},"Something interesting"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"At Google, over 35% of\nthe changes under consideration modify only a single file and\nabout 90% modify fewer than 10 files. Over 10% of changes\nmodify only a single line of code, and the median number of\nlines modified is 24. The median change size is significantly\nlower than reported by Rigby and Bird for companies such as\nAMD (44 lines), Lucent (263 lines), and Bing, Office and SQL\nServer at Microsoft (somewhere between those boundaries),\nbut in line for change sizes in open source projects.")),(0,n.kt)("p",null,'Even in big and fast-developing company like Google, most of the code modification is "small", when you usually need to change hundreds lines of code, that means something wrong with your company, please start to post your resume as soon as possible. '),(0,n.kt)("h2",{id:"write-at-the-end"},"Write at the end"),(0,n.kt)("p",null,"In my team now, I'd rather define the code review process as \"Tool-based Code Inspections\", we are using Gerrit to track code patch for review, but almost nobody will post comments or reply on it,  the reviewer have no interest to read others' code, developer should call a meeting and do a presentation to explain the code to reviewers, then reviewers will propose some comments in the meeting. "),(0,n.kt)("h1",{id:"refs"},"Refs"),(0,n.kt)("div",{id:"refer-anchor-1"}),"- [1] Caitlin Sadowski, Emma S\xf6derberg, Luke Church, Michal Sipko and Alberto Bacchelli. 2018. Modern Code Review: A Case Study at Google. In Proceedings of 40th International Conference on Software Engineering: Software Engineering in Practice Track, Gothenburg, Sweden, May 27-June 3, 2018 (ICSE-SEIP \u201918), 10 pages. DOI: 10.1145/3183519.3183525")}p.isMDXComponent=!0}}]);